// Generated by CoffeeScript 1.9.3
(function() {
  var COMMANDS, TAB, argv, c, command, fs, optimist, possibilities,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  fs = require('fs');

  optimist = require('optimist');

  COMMANDS = ['cover', 'report'];

  TAB = '        ';

  argv = optimist.usage("Usage: $0 subcommand\n=== subcommands ===\n" + TAB + (COMMANDS.join("\n" + TAB))).argv;

  command = argv._[0];

  if (command == null) {
    optimist.showHelp();
    process.exit(0);
  }

  if (indexOf.call(COMMANDS, command) < 0) {
    possibilities = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = COMMANDS.length; i < len; i++) {
        c = COMMANDS[i];
        if (command === c.slice(0, command.length)) {
          results.push(c);
        }
      }
      return results;
    })();
    switch (possibilities.length) {
      case 0:
        console.error("Unrecognised command: `" + command + "`. Run `" + argv['$0'] + "` for help.");
        process.exit(1);
        break;
      case 1:
        command = possibilities[0];
        break;
      default:
        console.error("Ambiguous command `" + command + "` matches `" + (possibilities.join('`, `')) + "`");
        process.exit(1);
    }
  }

  (require("./" + command))(argv, function(err, cov, exitCode) {
    if (exitCode == null) {
      exitCode = 0;
    }
    if (err) {
      console.error(err);
      process.exit(1);
    }
    return process.exit(exitCode);
  });

}).call(this);
